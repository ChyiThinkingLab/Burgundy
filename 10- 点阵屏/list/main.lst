C51 COMPILER V9.01   MAIN                                                                  09/29/2020 10:10:02 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\list\main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE INCDIR(.\delay;.\GPIO;.\Timer;.\LED_Display) DEBUG OBJECTEXTE
                    -ND PRINT(.\list\main.lst) OBJECT(.\list\main.obj)

line level    source

   1          #include "config.h"
   2          #include "GPIO.h"
   3          #include "delay.h"
   4          #include "timer.h"
   5          #include "led_display.h"
   6          
   7          sbit    K0 = P3^2;      //int
   8          sbit    K1 = P3^3;      //int
   9          sbit    K2 = P3^4;      
  10          sbit    K3 = P5^0;
  11          sbit    K4 = P5^1;      
  12          sbit    K5 = P3^5;
  13          sbit    K6 = P3^6;
  14          unsigned char timer0_cnt = 0;
  15          
  16          /*************  功能说明        **************
  17          
  18          本程序演示点阵屏
  19          
  20          ******************************************/
  21          
  22          const unsigned char code XJN[][16]={
  23          
  24          {0x10,0x0C,0x24,0xA4,0xA4,0xA4,0xA5,0xA6,0xA4,0xA4,0xA4,0xA4,0x24,0x14,0x0C,0x00},
  25          {0x40,0x40,0x40,0x5F,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x5F,0x40,0x40,0x40,0x00},/*"宣",0*/
  26          
  27          {0x80,0x80,0x40,0x20,0x50,0x48,0x44,0xC3,0x44,0x48,0x50,0x20,0x40,0x80,0x80,0x00},
  28          {0x40,0x40,0x42,0x4A,0x72,0x42,0x42,0x7F,0x42,0x42,0x62,0x5A,0x42,0x40,0x40,0x00},/*"金",0*/
  29          
  30          {0x00,0x00,0xFE,0x92,0x92,0x92,0x92,0xFE,0x92,0x92,0x92,0x92,0xFE,0x00,0x00,0x00},
  31          {0x80,0x84,0x44,0x44,0x24,0x14,0x0C,0x07,0x04,0x04,0x44,0x84,0x44,0x3C,0x00,0x00},/*"男",0*/
  32          };
  33          
  34          const unsigned char code QXW[][16]={
  35          {0x00,0x04,0x84,0x84,0x4C,0x54,0x25,0x26,0x24,0x54,0x4C,0x84,0x84,0x04,0x00,0x00},
  36          {0x01,0x01,0x80,0x60,0x1F,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x01,0x01,0x00},/*"齐",0*/
  37          
  38          {0x00,0x08,0xC8,0x38,0x8F,0x08,0x28,0x10,0xFC,0x4B,0x48,0xF9,0x4A,0x48,0x08,0x00},
  39          {0x04,0x23,0x70,0x2C,0x23,0x28,0x70,0x00,0xFF,0x22,0x22,0x3F,0x22,0x22,0x20,0x00},/*"雄",0*/
  40          
  41          {0x00,0x80,0x60,0xF8,0x07,0x08,0x48,0x48,0x48,0xFF,0x48,0x48,0x48,0x48,0x08,0x00},
  42          {0x01,0x00,0x00,0xFF,0x00,0x02,0x02,0x02,0x02,0xFF,0x02,0x02,0x12,0x22,0x1E,0x00},/*"伟",0*/
  43          };
  44          
  45          const unsigned char code NO[][16]={
  46          {0x40,0x30,0xEF,0x24,0x64,0x48,0x48,0x7F,0x48,0x48,0x48,0x7F,0x48,0x48,0x40,0x00},
  47          {0x01,0x01,0x7F,0x21,0x11,0x00,0xFF,0x49,0x49,0x49,0x49,0x49,0xFF,0x00,0x00,0x00},/*"错",0*/
  48          };
  49          
  50          const unsigned char code WU[][16]={
  51          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
  52          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},/*"错",0*/
  53          };
  54          
C51 COMPILER V9.01   MAIN                                                                  09/29/2020 10:10:02 PAGE 2   

  55          
  56          
  57          /******************** IO配置函数 **************************/
  58          void    LED_GPIO_config(void)
  59          {
  60   1              GPIO_InitTypeDef        GPIO_InitStructure;             //结构定义
  61   1              GPIO_InitStructure.Mode = GPIO_OUT_PP;          //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_
             -OUT_PP
  62   1              
  63   1              GPIO_InitStructure.Pin  = GPIO_Pin_7;           //指定要初始化的IO, GPIO_Pin_7, 或操作
  64   1              GPIO_Inilize(GPIO_P3, &GPIO_InitStructure);     //初始化
  65   1              
  66   1              GPIO_InitStructure.Pin  = GPIO_Pin_1 | GPIO_Pin_2 | GPIO_Pin_3;         //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pi
             -n_7, 或操作
  67   1              GPIO_Inilize(GPIO_P4, &GPIO_InitStructure);     //初始化
  68   1      }
  69          
  70          /******************** IO配置函数 **************************/
  71          void    GPIO_config(void)
  72          {
  73   1              GPIO_InitTypeDef        GPIO_InitStructure;             //结构定义
  74   1              
  75   1              //推完输出
  76   1              GPIO_InitStructure.Mode = GPIO_OUT_PP;          //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_
             -OUT_PP
  77   1              
  78   1              GPIO_InitStructure.Pin  = GPIO_Pin_0 | GPIO_Pin_2 | GPIO_Pin_4 | GPIO_Pin_6;//指定要初始化的IO, GPIO_Pin_
             -0, 2, 4, 6: 点阵L_STB, H_STB, DATA, CLK
  79   1              GPIO_Inilize(GPIO_P0, &GPIO_InitStructure);     //初始化
  80   1      }
  81          
  82          /************************ 定时器配置 ****************************/
  83          void Timer_config(void)
  84          {
  85   1              TIM_InitTypeDef         TIM_InitStructure;                                      //结构定义
  86   1              
  87   1              TIM_InitStructure.TIM_Mode      = TIM_16BitAutoReload;  //指定工作模式,   TIM_16BitAutoReload,TIM_16Bit,TI
             -M_8BitAutoReload,TIM_16BitAutoReloadNoMask
  88   1              TIM_InitStructure.TIM_Polity    = PolityHigh;                   //指定中断优先级, PolityHigh,PolityLow
  89   1              TIM_InitStructure.TIM_Interrupt = ENABLE;                               //中断是否允许,   ENABLE或DISABLE
  90   1              TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_1T;                 //指定时钟源,     TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK_
             -Ext
  91   1              TIM_InitStructure.TIM_ClkOut    = DISABLE;                              //是否输出高速脉冲, ENABLE或DISABLE
  92   1              TIM_InitStructure.TIM_Value     = 65536UL - (MAIN_Fosc / 2000);         //初值1K
  93   1              TIM_InitStructure.TIM_Run       = ENABLE;                               //是否初始化后启动定时器, ENABLE或DISABLE
  94   1              Timer_Inilize(Timer0, &TIM_InitStructure);                              //初始化Timer0    Timer0,Timer1,Timer2
  95   1      
  96   1              TIM_InitStructure.TIM_Mode      = TIM_16BitAutoReload;  //指定工作模式,   TIM_16BitAutoReload,TIM_16Bit,TI
             -M_8BitAutoReload,TIM_16BitAutoReloadNoMask
  97   1              TIM_InitStructure.TIM_Polity    = PolityLow;                    //指定中断优先级, PolityHigh,PolityLow
  98   1              TIM_InitStructure.TIM_Interrupt = ENABLE;                               //中断是否允许,   ENABLE或DISABLE
  99   1              TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_1T;                 //指定时钟源, TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK_Ext
 100   1              TIM_InitStructure.TIM_ClkOut    = DISABLE;                              //是否输出高速脉冲, ENABLE或DISABLE
 101   1              TIM_InitStructure.TIM_Value     = 65536UL - (MAIN_Fosc / 1000);         //初值//500
 102   1              TIM_InitStructure.TIM_Run       = ENABLE;                               //是否初始化后启动定时器, ENABLE或DISABLE
 103   1              Timer_Inilize(Timer1, &TIM_InitStructure);                              //初始化Timer1    Timer0,Timer1,Timer2
 104   1      
 105   1              TIM_InitStructure.TIM_Interrupt = ENABLE;                               //中断是否允许,   ENABLE或DISABLE. (注意: Timer2固定为16位自
             -动重装, 中断固定为低优先级)
 106   1              TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_12T;                //指定时钟源,     TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK_
             -Ext
 107   1              TIM_InitStructure.TIM_ClkOut    = DISABLE;                              //是否输出高速脉冲, ENABLE或DISABLE
C51 COMPILER V9.01   MAIN                                                                  09/29/2020 10:10:02 PAGE 3   

 108   1              TIM_InitStructure.TIM_Value     = 65536UL - (MAIN_Fosc / 12 / 1000);            //初值//10ms 0.5K
 109   1              TIM_InitStructure.TIM_Run       = ENABLE;                               //是否初始化后启动定时器, ENABLE或DISABLE
 110   1              Timer_Inilize(Timer2, &TIM_InitStructure);                              //初始化Timer2    Timer0,Timer1,Timer2
 111   1      }
 112          
 113          
 114          /******************** 主函数 **************************/
 115          void main(void)
 116          {
 117   1              LED_GPIO_config();//初始化P3.7、P4.1、P4.2、P4.3
 118   1              GPIO_config();
 119   1              Timer_config();
 120   1              EA = 1;//开总中断
 121   1      
 122   1              while(1)
 123   1              {
 124   2                      P37 = 0;
 125   2                      delay_ms(100);
 126   2                      P37 = 1;
 127   2                      delay_ms(100);
 128   2                      
 129   2              if(K0==0)
 130   2              { 
 131   3                      K0=0;
 132   3                      delay_ms(100);
 133   3                      if(K6==0)
 134   3                      {
 135   4               
 136   4                              K6=0;   
 137   4                              L_Display(XJN, 8, 3);
 138   4                      }
 139   3                      else
 140   3                      {
 141   4                              L_Display(NO, 8, 1);
 142   4                      }
 143   3              }
 144   2              if(K1==0)
 145   2              { 
 146   3                      K1=0;
 147   3                      delay_ms(100);
 148   3                      if(K5==0)
 149   3                      {
 150   4               
 151   4                              K5=0;   
 152   4                              L_Display(QXW, 8, 3);
 153   4                      }
 154   3                      else
 155   3                      {
 156   4                              L_Display(NO, 8, 1);
 157   4                      }
 158   3              }
 159   2              
 160   2              if(K2 == 0|| K3 == 0 || K4 == 0 || K5 == 0 || K6 == 0)
 161   2              {
 162   3                      if(K2 == 0|| K3 == 0 || K4 == 0 || K5 == 0 || K6 == 0)
 163   3                      {
 164   4                      delay_ms(100);
 165   4                      L_Display(NO, 8, 1);
 166   4                      }
 167   3              }
 168   2                      
 169   2              L_Display(WU, 8, 1);
C51 COMPILER V9.01   MAIN                                                                  09/29/2020 10:10:02 PAGE 4   

 170   2              
 171   2              }
 172   1      }
 173          
 174          
 175          
 176          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    309    ----
   CONSTANT SIZE    =    256    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
